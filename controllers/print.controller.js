const { sql, poolPromise } = require('../config/dbConfig');

exports.printAndLog = async (req, res) => {
  const { processOrderId } = req.body;
  console.log('üì• ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ processOrderId:', processOrderId);

  if (!processOrderId) {
    console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏ processOrderId');
    return res.status(400).json({ error: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ processOrderId' });
  }

  try {
    const pool = await poolPromise;

    console.log('üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ print ‡∏ó‡∏µ‡πà‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à...');
    const checkResult = await pool.request()
      .input('processOrderId', sql.VarChar, processOrderId)
      .query(`
        SELECT TOP 1 *
        FROM Trans_PrintTask
        WHERE f_PrintParameter = @processOrderId AND f_PrintTaskStatus = 0
      `);

    console.log('üì¶ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:', checkResult.recordset);

    if (checkResult.recordset.length > 0) {
      console.warn('‚ùå ‡∏û‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ print ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö processOrderId ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß');
      return res.status(409).json({ error: '‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£ print ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô 0 ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö processOrderId ‡∏ô‡∏µ‡πâ‡πÅ‡∏•‡πâ‡∏ß' });
    }

    const printTaskData = {
      f_PrintTaskDate: new Date(),
      f_PrintParameter: processOrderId,
      f_PrintReport: 'Production_Replace',
      f_PrintDestination: 'RDSMK',
      f_PrintTaskStatus: 0
    };

    console.log('üìù ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å:', printTaskData);

    await pool.request()
      .input('f_PrintTaskDate', sql.DateTime, printTaskData.f_PrintTaskDate)
      .input('f_PrintParameter', sql.VarChar, printTaskData.f_PrintParameter)
      .input('f_PrintReport', sql.VarChar, printTaskData.f_PrintReport)
      .input('f_PrintDestination', sql.VarChar, printTaskData.f_PrintDestination)
      .input('f_PrintTaskStatus', sql.Int, printTaskData.f_PrintTaskStatus)
      .query(`
        INSERT INTO Trans_PrintTask (f_PrintTaskDate, f_PrintReport, f_PrintParameter, f_PrintDestination, f_PrintTaskStatus)
        VALUES (@f_PrintTaskDate, @f_PrintReport, @f_PrintParameter, @f_PrintDestination, @f_PrintTaskStatus)
      `);

    console.log('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log print ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:', printTaskData);

    res.json({ message: '‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log print ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à', data: printTaskData });
  } catch (err) {
    console.error('üí• error:', err);
    res.status(500).json({ error: err.message });
  }
};