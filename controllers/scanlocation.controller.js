const { sql, poolPromise } = require('../config/dbConfig');

exports.getProductsByLocation = async (req, res) => {
  const { location } = req.query;
  console.log('üì• ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ location:', location); 

  if (!location) {
    console.warn('‚ö†Ô∏è ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏ location');
    return res.status(400).json({ error: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏ location' });
  }
  try {
    const pool = await poolPromise;
    const result = await pool.request()
      .input('location', sql.VarChar, location)
      .query(`
        SELECT F_ProductId, F_ProductName, F_Location, F_TypeStock, F_StockBalance, F_ProductBrandName, F_ProductGroupName, F_UnitName
        FROM View_StockBalance
        WHERE F_Location = @location
      `);

    console.log('üì¶ ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà query ‡πÑ‡∏î‡πâ:', result.recordset); 

    if (result.recordset.length === 0) {
      console.warn('‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô Location ‡∏ô‡∏µ‡πâ');
      return res.status(404).json({ error: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏ô Location ‡∏ô‡∏µ‡πâ' });
    }
    res.json(result.recordset);
  } catch (err) {
    console.error('üí• error:', err);
    res.status(500).json({ error: err.message });
  }
};